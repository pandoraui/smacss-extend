// 状态表示可以系统化 如 active disabled hide
// 还有 round，radius 以及 process，loading，

// 状态设定无需前缀 #{$ns}
.block {
  display: block;
  width: 100%;
}

// 边框、边线 默认灰色边线   hor 横向，ver 纵向
.border {

}
.line-hor{

}
.line-ver{

}

// 小圆角
.radius {
  border-radius: px2rem(3);
}
// 大圆角
.round {
  border-radius: px2rem(4000);
}


// 链接状态
// -----------------------------------------------------------------------------
// .#{$ns}link {
.link {
  font-weight: normal;
  color: $link-color;
  border-radius: 0;

  &,
  &:focus,
  &:active,
  &.active,
  &.disabled {
    background-color: transparent;
    @include box-shadow(none);
  }

  @include hover {
    border-color: transparent;
  }
  @include hover-focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }

  &:disabled {
    @include hover-focus {
      color: $link-disabled-color;
      text-decoration: none;
    }
  }
}


// 激活 不全局设定，具体使用具体设置
/* :active,
.active{

} */



// 禁用，默认效果灰掉，不仅仅是半透明的处理，通过滤镜变灰，
// 并且 禁用了鼠标事件，但键盘事件未禁用（此方法不够完美）
// 并且 focus 时无状态显示，禁止 focus 最好了
[disabled],
.disabled {
  // https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events
  // 元素永远不会成为鼠标事件的target，本质是穿透此元素，鼠标事件能把该元素下层的元素捕获
  // 好的做法是，使用 js 统一处理此类元素，禁止事件行为或提醒，并且设置其无法聚焦
  pointer-events: none; // Disable mouse events

  cursor: $cursor-disabled;
  opacity: .5;

  // 可以使用滤镜变灰
  filter: grayscale(100%);
  filter: gray;

  &:hover{
    cursor: $cursor-disabled;
  }
  &:focus{
    outline: none;
  }
}

// 默认使用 reboot 样式，也可以选用排版样式
.reboot {}
.typo   {}

// 隐藏
[hidden],
.hidden{
  display: none;
}


/*
  参看：http://www.w3cplus.com/css3/ten-effects-with-css3-filter

  elm {
    filter: none | <filter-function > [ <filter-function> ]
   }

  其中filter-function一个具有以下值可选：（可以多次混合使用）
  grayscale灰度
  sepia褐色（求专业指点翻译）
  saturate饱和度
  hue-rotate色相旋转
  invert反色
  opacity透明度
  brightness亮度
  contrast对比度
  blur模糊
  drop-shadow阴影
*/
