
// 生成灰度等级 20个级别 or 10个级别
// @see http://codepen.io/airen/pen/xwveK
// @see http://www.w3cplus.com/preprocessor/sass-color-function.html

$gray-prefix: 'color-gray-';
$gray-base:   #808080;  //gray

// silver	#C0C0C0	192,192,192
// gray	  #808080	128,128,128


// white            ...            #808080;         ...          black;
// $gray-light9 ... $gray-light1  $gray-base  $gray-dark1 ... $gray-dark9

// #f3f3f3 #e6e6e6 #d9d9d9 #cdcdcd silver  #b3b3b3 #a6a6a6 #9a9a9a #8d8d8d gray
// #737373 #676767 #5a5a5a #4d4d4d #404040 #343434 #272727 #1a1a1a #0d0d0d black

//如上数据，对 dark 的值使用要求不多，对 light 的值，也许会多一点
//从以上数据中各选5个数据
//效果调试效果可以使用 http://codepen.io/anon/pen/oLzyEx



// TODO：不能直接生成变量，怎么办
//

// @mixin swatchesDarken($color) {
//   @for $i from 1 through 10 {
//     $#{$gray-prefix}#{$i+10}: darken($color, $i*5);
//   }
// }
// @mixin swatchesLighten($color) {
//   @for $i from 1 through 10 {
//     $#{$gray-prefix}#{11-$i}: lighten($color, $i*5);
//   }
// }
//
// @include swatchesDarken($gray-color);
// @include swatchesLighten($gray-color);





// 需要的灰度值有 212121
// $gray-darker:   lighten($black, 13.5%) !default; // #222
// $gray-dark:     lighten($black, 20%) !default;   // #333
// $gray:          lighten($black, 33.5%) !default; // #555
// // $gray-light:    lighten($black, 46.7%) !default; // #777
// $gray-light:    lighten($black, 53.3%) !default; // #888
// $gray-lighter:  lighten($black, 87.5%) !default; // #dfdfdf //#efeff4
// $gray-lightest: lighten($black, 93.5%) !default; // #eee



/*

http://codepen.io/anon/pen/oLzyEx

<ul class="swatches black">
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
  <li></li>
</ul>

$blackBase: #808080;
$bgc: #fff;

@mixin swatchesDarken($color) {
  @for $i from 1 through 10 {
    $x:$i+11;
      li:nth-child(#{$x}) {
      $n:$i*5;
      $bgc:darken($color,$n);
      background-color: $bgc;
      &:hover:before {
        content: "#{$bgc}";
        color: lighten($bgc,40);
        font-family: verdana;
        font-size: 8px;
        padding: 2px;
      }
    }
  }
}
@mixin swatchesLighten($color) {
  @for $i from 1 through 10 {
    $x:11-$i;
      li:nth-child(#{$x}) {
      $n:$i*5;
      $bgc:lighten($color,$n);
      background-color: $bgc;
      &:hover:before {
        content: "#{$bgc}";
        color: darken($bgc,40);
        font-family: verdana;
        font-size: 8px;
        padding: 2px;
      }
    }
  }
}



.swatches li {
  width: 4.7619047619%;
  float: left;
  height: 60px;
  list-style: none outside none;
}


ul.black {
  @include swatchesLighten($blackBase);
  @include swatchesDarken($blackBase);
  li:nth-child(11) {
    background-color: $blackBase;
  }
}

**/
